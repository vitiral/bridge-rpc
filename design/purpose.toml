[REQ-0]
text = '''
The purpose of the Bridge Protocol is to have an ultra lightweight remote
procedural call framework that can be run on microcontrollers and contains
"bridge" nodes for bridging between protocols.

See the README.md for more information.
'''

[REQ-0-definitions]
text = '''
- `node`: a device with a `node_uid`, `cluster_uid` and registered `fn_id`s
  that can communicate on one or more networks.
- `bridge`: a node that other nodes can register themselves on that can talk on
  at least one network and knows the `network_uid` for all networks.
  Can act as a "bridge" between networks.
- `cluster_uid`: cluster unique id which represents a collection of nodes and
  bridges with the same `cluster_uid`. Defined by the application developer at
  compile time.
- `node_uid`: node unique id which is used for locating nodes to call functions
  on and return data. Defined by application developer at compile time.
- `network_uid`: the unique network id that all  networks (i.e. tcp/ip, CAN,
  ZigBee, UART) have assigned to them at compile time. Only the bridges need to
  know which network is which.
- `fn_id`: the id of a function associated with a particular node (is unique on
  that node). Does not HAVE to be unique across nodes, but it is recommended for
  application developers to make it unique.
- `cx_id`: the context id of a RPC. This is used to ensure that data does not
  get returned twice and for indexed functions to ensure that functions don't
  get called twice.
- `input_value`: the data passed along with the `fn_id` with `CALL_FN`. The
  "input" value to the function.
'''

[SPC-0-done]
partof = "REQ-0-definitions"
done = "by definition"

