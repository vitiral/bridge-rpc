[REQ-0]
text = '''
The purpose of the Bridge Protocol is to have an ultra lightweight remote
procedural call framework that can be run on microcontrollers and contains
"bridge" nodes for bridging between protocols.

See the [README.md][1] for more information about the basic requirements.

See [[SPC-0]] for the specification of the protocol.

[1]: https://github.com/vitiral/bridge-rpc/blob/master/README.md
'''

[REQ-0-definitions]
text = '''
- `node`: a device with a `node_uid`, `cluster_uid` and registered `fn_id`s
  that can communicate on one or more networks.
- `bridge`: a node that other nodes can register themselves on that can talk on
  at least one network and knows the `network_uid` for all networks.
  Can act as a "bridge" between networks.
- `function`: a declared method with a `fn_id` that begins the RPC process on
  a node.
- `RPC`: a single remote procedural call, ack, return value, kill clear, etc.
  Can be thought of as all communication and execution that happens for a
  unique `(init_uid,exec_uid,fn_id,cx_id)` tuple.
- `cluster_uid`: cluster unique id which represents a collection of nodes and
  bridges with the same `cluster_uid`. Defined by the application developer at
  compile time.
- `node_uid`: node unique id which is used for locating nodes to call functions
  on and return data. Defined by application developer at compile time.
  `node_uid` cannot equal 0.
- `fn_id`: the id of a function associated with a particular node (is unique on
  that node). Does not HAVE to be unique across nodes, but it is recommended for
  application developers to make it unique.
- `cx_id`: the context id of a RPC. This is used to ensure that data does not
  get returned twice and for indexed functions to ensure that functions don't
  get called twice.
- `input_value`: the data passed along with the `fn_id` with `CALL_FN`. The
  "input" value to the function.
- `value`: the value returned by a non-streaming function call.
- `stream_value`: one of `count` values returned by a streaming functionc call.
'''

[SPC-0-done]
partof = "REQ-0-definitions"
done = "by definition"

[SPC-0]
text = '''

'''

